serial_communcator.py 
これがシリアル通信をおこなっているクラス。とりあえずこれだけでシリアル通信はできる。
__init__                  
実例:SerialCommuncator("COM2", 9600, serial.PARITY_EVEN, serial.STOPBITS_ONE, 0.08)
    :SerialCommuncator( ﾎﾟｰﾄ ,ﾎﾞｰﾚｰﾄ,    ﾊﾟﾘﾃｨｰﾋﾞｯﾄ     ,     ｽﾄｯﾌﾟﾋﾞｯﾄ       , ﾀｲﾑｱｳﾄ)
    :で指定したシリアルポートを開く
serial_write
実例:serial_write(b'\x00\x01\x01\r\n')で「b'\x00\x01\x01\r\n'」が送信される
serial_read
実例:serial_read()でシリアルポートのバッファ内にあるデータを改行コード区切りで受け取る。
    :例:「b'\x00\x01\x01\r\n\x00\x02\x02'」がバッファ内にあったら「b'\x00\x01\x01\r\n'」までを取り出す。
    :改行コードがなくても設定したタイムアウト時間を超えたら取り出す。
serial_close
実例:serial_close()で開いているシリアルポートを閉じる。(開くのはinitでやっている)

test_communicator.py
上記のプログラムをテストするためのプログラム。main()を実行すれば動作する。

serial_manager.py   これは応答処理や送信データのフォーマットなどを行う。シリアル通信の追加要素。本番で使うのはこのクラス。

queue_creat.py      これはキューを作成するクラス。キューの指定は名前で指定する。